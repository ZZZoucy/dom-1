{"version":3,"sources":["work.js"],"names":["window","dom","find","selector","scope","document","querySelectorAll","style","node","name","value","arguments","length","Object","key","each","nodeList","fn","i","call","div","divList","n","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,OAAOC,GAAP,GAAa;AACTC,QADS,gBACJC,QADI,EACMC,KADN,EACa;AAClB,eAAO,CAACA,SAASC,QAAV,EAAoBC,gBAApB,CAAqCH,QAArC,CAAP;AACH,KAHQ;AAITI,SAJS,iBAIHC,IAJG,EAIGC,IAJH,EAISC,KAJT,EAIgB;AACrB,YAAIC,UAAUC,MAAV,KAAqB,CAAzB,EAA4B;AACxBJ,iBAAKD,KAAL,CAAWE,IAAX,IAAmBC,KAAnB;AACH,SAFD,MAEO,IAAIC,UAAUC,MAAV,KAAqB,CAAzB,EAA4B;AAC/B,gBAAI,OAAOH,IAAP,KAAgB,QAApB,EAA8B;AAC1B,uBAAOD,KAAKD,KAAL,CAAWE,IAAX,CAAP;AACH,aAFD,MAEO,IAAIA,gBAAgBI,MAApB,EAA4B;AAC/B,qBAAK,IAAIC,GAAT,IAAgBL,IAAhB,EAAsB;AAClBD,yBAAKD,KAAL,CAAWO,GAAX,IAAkBL,KAAKK,GAAL,CAAlB;AACH;AACJ;AACJ;AACJ,KAhBQ;AAiBTC,QAjBS,gBAiBJC,QAjBI,EAiBMC,EAjBN,EAiBU;AACf,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,SAASJ,MAA7B,EAAqCM,GAArC,EAA0C;AACtCD,eAAGE,IAAH,CAAQ,IAAR,EAAcH,SAASE,CAAT,CAAd;AACH;AACJ;AArBQ,CAAb;;AAwBA,IAAME,MAAMnB,IAAIC,IAAJ,CAAS,YAAT,EAAuB,CAAvB,CAAZ,EAAuC;AACvCD,IAAIM,KAAJ,CAAUa,GAAV,EAAe,OAAf,EAAwB,KAAxB,GAAgC;;AAEhC,IAAMC,UAAUpB,IAAIC,IAAJ,CAAS,MAAT,CAAhB,EAAkC;AAClCD,IAAIc,IAAJ,CAASM,OAAT,EAAkB,UAACC,CAAD;AAAA,WAAOC,QAAQC,GAAR,CAAYF,CAAZ,CAAP;AAAA,CAAlB,GAA0C","file":"work.8cf3c821.map","sourceRoot":"../src","sourcesContent":["window.dom = {\n    find(selector, scope) {\n        return (scope || document).querySelectorAll(selector);\n    },\n    style(node, name, value) {\n        if (arguments.length === 3) {\n            node.style[name] = value;\n        } else if (arguments.length === 2) {\n            if (typeof name === \"string\") {\n                return node.style[name];\n            } else if (name instanceof Object) {\n                for (let key in name) {\n                    node.style[key] = name[key];\n                }\n            }\n        }\n    },\n    each(nodeList, fn) {\n        for (let i = 0; i < nodeList.length; i++) {\n            fn.call(null, nodeList[i]);\n        }\n    },\n};\n\nconst div = dom.find(\"#test>.red\")[0]; // 获取对应的元素\ndom.style(div, \"color\", \"red\"); // 设置 div.style.color\n\nconst divList = dom.find(\".red\"); // 获取多个 div.red 元素\ndom.each(divList, (n) => console.log(n)); // 遍历 divList 里的所有元素\n"]}